CREATE TABLE [TB_USER](
	[USER_ID] [varchar](50) NOT NULL,
	[PASSWORD] [varchar](100) NOT NULL,
	[REAL_NAME] [nvarchar](50) NULL,
	[SEX] [varchar](10) NOT NULL,
	[ACCOUNT_STATUS] [nvarchar](10) NOT NULL,
	[EMAIL] [varchar](100) NULL,
	[USER_IMAGE] [image] NULL,
	[USER_IMAGE_PATH] [nvarchar](100) NULL,
	[TITLE] [nvarchar](100) NULL,
 CONSTRAINT [PK_TB_USER] PRIMARY KEY  
(
	[USER_ID] 
)) ;

CREATE TABLE [TB_PERMISSION](
	[PERMISSION_ID] [varchar](50) NOT NULL,
	[PERMISSION_NAME] [nvarchar](50) NOT NULL,
	[PARENT_PERMISSION_ID] [varchar](50) NULL,
PRIMARY KEY  
(
	[PERMISSION_ID] 
)
) 
;

CREATE TABLE [TB_ROLE](
	[ROLE_ID] [varchar](50) NOT NULL,
	[ROLE_NAME] [nvarchar](50) NOT NULL,
PRIMARY KEY  
(
	[ROLE_ID] 
)
) ;

CREATE TABLE [TB_USER_ROLE](
	[USER_ID] [varchar](50) NOT NULL,
	[ROLE_ID] [varchar](50) NOT NULL,
PRIMARY KEY  
(
	[USER_ID] ,
	[ROLE_ID] 
)
) ;

ALTER TABLE .[TB_USER_ROLE]  WITH CHECK ADD  CONSTRAINT [FK_ROLE_ID_TB_USER_ID] FOREIGN KEY([ROLE_ID])
REFERENCES [TB_ROLE] ([ROLE_ID]);

ALTER TABLE [TB_USER_ROLE] CHECK CONSTRAINT [FK_ROLE_ID_TB_USER_ID];

ALTER TABLE [TB_USER_ROLE]  WITH CHECK ADD  CONSTRAINT [FK_USER_ID_TB_USER_ID] FOREIGN KEY([USER_ID])
REFERENCES [TB_USER] ([USER_ID]);

ALTER TABLE [TB_USER_ROLE] CHECK CONSTRAINT [FK_USER_ID_TB_USER_ID];

CREATE TABLE [TB_ROLE_PERMISSION](
	[ROLE_ID] [varchar](50) NOT NULL,
	[PERMISSION_ID] [varchar](50) NOT NULL,
PRIMARY KEY  
(
	[ROLE_ID] ,
	[PERMISSION_ID] 
)
) ;

ALTER TABLE [TB_ROLE_PERMISSION]  WITH CHECK ADD  CONSTRAINT [FK_PERMISSION_TB_ROLE_PERMISSION] FOREIGN KEY([PERMISSION_ID])
REFERENCES [TB_PERMISSION] ([PERMISSION_ID]);

ALTER TABLE [TB_ROLE_PERMISSION] CHECK CONSTRAINT [FK_PERMISSION_TB_ROLE_PERMISSION];

ALTER TABLE [TB_ROLE_PERMISSION]  WITH CHECK ADD  CONSTRAINT [FK_ROLE_TB_ROLE_PERMISSION] FOREIGN KEY([ROLE_ID])
REFERENCES [TB_ROLE] ([ROLE_ID]);

ALTER TABLE [TB_ROLE_PERMISSION] CHECK CONSTRAINT [FK_ROLE_TB_ROLE_PERMISSION];



CREATE TABLE [TB_OP_LOG](
	[OP_ID] [int] IDENTITY(1,1) NOT NULL,
	[OP_USER_ID] [varchar](50) NOT NULL,
	[OPER_NAME] [varchar](100) NOT NULL,
	[OPER_IP] [varchar](50) NOT NULL,
	[OPER_TIME] [datetime] NOT NULL,
	[OPER_DESC] [varchar](500) NOT NULL,
 CONSTRAINT [PK_TB_OPLOG] PRIMARY KEY  
(
	[OP_ID] 
)
) ;


CREATE TABLE [TB_LOGIN_LOG](
	[LOG_ID] [int] IDENTITY(1,1) NOT NULL,
	[LOG_USER_ID] [nvarchar](100) NOT NULL,
	[LOG_IP] [varchar](50) NOT NULL,
	[LOG_TIME] [datetime] NOT NULL,
	[LOG_RESULT] [char](1) NULL,
PRIMARY KEY  
(
	[LOG_ID] 
) 
) ;

INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('01','用户及权限',null);
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0101','权限列表','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0102','权限添加','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0103','权限编辑','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0104','权限删除','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0105','角色列表','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0106','角色添加并分配权限','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0107','角色编辑及编辑权限','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0108','角色删除','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0109','用户列表','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0110','用户添加并分配角色','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0111','用户编辑及编辑角色','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0112','用户删除','01');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('02','日志',null);
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0201','登录日志查看','02');
INSERT INTO TB_PERMISSION(PERMISSION_ID,PERMISSION_NAME,PARENT_PERMISSION_ID) VALUES('0202','操作日志查看','02');

INSERT INTO TB_ROLE(ROLE_ID,ROLE_NAME) VALUES('admin','管理员');

insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','01');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0101');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0102');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0103');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0104');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0105');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0106');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0107');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0108');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0109');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0110');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0111');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0112');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','02');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0201');
insert into TB_ROLE_PERMISSION(ROLE_ID,PERMISSION_ID) values('admin','0202');

INSERT INTO [TB_USER]
           ([USER_ID]
           ,[PASSWORD]
           ,[REAL_NAME]
           ,[SEX]
           ,[ACCOUNT_STATUS]
           ,[EMAIL]
           ,[USER_IMAGE]
           ,[USER_IMAGE_PATH]
           ,[TITLE])
     VALUES
           ('ADMIN'
           ,'uu6YR6CV/GHRrP7txH82YQ=='
           ,'admin'
           ,'男'
           ,'Y'
           ,'ADMIN@163.COM'
           ,NULL
           ,'avatar5.png'
           ,'工程师');

INSERT INTO TB_USER_ROLE([USER_ID],[ROLE_ID]) VALUES('admin','admin');

go

create  procedure [dbo].[p_splitpage] 
@sql nvarchar(4000),--要执行的sql语句
@page int=1, --要显示的页码
@pageSize int,--每页的大小
@pageCount int=0 out,--总页数
@recordCount int=0 out,--总记录数
@SearchTime int=0 out
as
declare @usetime datetime
set @usetime=getdate()
set nocount on
declare @p1 int
exec sp_cursoropen @p1 output,@sql,@scrollopt=8,@ccopt=1,@rowcount=@pagecount output
set @recordCount = @pageCount
select @pagecount=ceiling(1.0*@pagecount/@pagesize),@page=(@page-1)*@pagesize+1
exec sp_cursorfetch @p1,16,@page,@pagesize 
exec sp_cursorclose @p1
set  @SearchTime=datediff(ms,@usetime,getdate())
GO


